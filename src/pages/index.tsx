import PokemonCard from '@/components/PokemonCard';
import { Pokemon } from '@/types/pokemon';
import Head from 'next/head';
import Link from 'next/link';
import { useMemo, useState } from 'react';

// Code exécuter côté back.
export async function getServerSideProps() {
  // Fetch data from external API
  const res = await fetch('https://api-pokemon-fr.vercel.app/api/v1/pokemon');
  const pokemons = await res.json();

  // Pass data to the page via props
  return { props: { pokemons } };
}

interface HomeProps {
  pokemons: Pokemon[];
}
export default function Home({ pokemons }: HomeProps) {
  const [numberPerPage, setNumberPerPage] = useState(20);
  const [pageNumber, setPageNumber] = useState(0);

  const pokemonsFiltered = useMemo(() => {
    const indexStart = pageNumber * numberPerPage;
    const indexEnd = indexStart + numberPerPage;

    return pokemons.slice(indexStart, indexEnd);
  }, [pokemons, numberPerPage, pageNumber]);

  return (
    <>
      <Head>
        <title>Pokedex Olduvai</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-blue-500 min-h-screen">
        <h1 className="text-2xl md:text-6xl text-white font-bold text-center">
          Pokedex
        </h1>
        <div className="flex justify-center gap-2">
          <span className="text-white">
            Nombre de pokemons par page
          </span>
          <select
            id="numberPerPage"
            onChange={(e) => setNumberPerPage(Number(e.target.value))}
          >
            <option value="20">20</option>
            <option value="50">50</option>
            <option value="100">100</option>
          </select>
        </div>
        <div className="flex justify-center gap-2 my-2 flex-col md:flex-row">
          <div className="text-center">
            <button
              type="button"
              onClick={() => setPageNumber(pageNumber - 1)}
              className="bg-white p-2 rounded-md shadow-sm disabled:bg-gray-400 min-w-[150px] disabled:cursor-not-allowed"
              disabled={pageNumber === 0}
            >
              Page précédente
            </button>
          </div>
          <div className="text-center">
            <button
              type="button"
              onClick={() => setPageNumber(pageNumber + 1)}
              className="bg-white p-2 rounded-md shadow-sm disabled:bg-gray-400 min-w-[150px]  disabled:cursor-not-allowed"
              disabled={pokemons.length <= (pageNumber + 1) * numberPerPage}
            >
              Page suivante
            </button>
          </div>
        </div>
        <div className="grid grid-cols-2 md:grid-cols-4 xl:grid-cols-6 gap-2 p-2">
          {pokemonsFiltered.map((pokemon) => (
            <Link
              className="flex"
              href={`/pokemon/${pokemon.pokedexId}`}
              key={`${pokemon.pokedexId}${pokemon.name.fr}`}
            >
              <PokemonCard pokemon={pokemon} />
            </Link>
          ))}
        </div>
      </main>
    </>
  );
}
